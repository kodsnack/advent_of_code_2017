(use Int)
(use Array)
(use IO)

(defn answer [ints f]
  (let [pos 0
        len (count &ints)
        steps 0]
    (do
      (while (and (< -1 pos) (< pos len))
        (let [jump @(nth &ints pos)]
          (do
            (aset! &ints pos (f jump)) ;; modify instruction
            (set! &pos (+ pos jump)) ;; jump!
            (set! &steps (inc steps)))))
      steps)))

(defn part-2 [x]
  (if (< x 3)
    (+ x 1)
    (- x 1)))

(defn main []
  (let [input (read-file "day5.txt")
        ints (copy-map from-string &(lines input))]
    (do
      (println (refstr (answer @&ints inc)))
      (println (refstr (answer @&ints part-2))))))
